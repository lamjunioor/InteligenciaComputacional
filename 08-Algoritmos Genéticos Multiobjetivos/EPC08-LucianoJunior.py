# -*- coding: utf-8 -*-
"""EPC08.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1u7O9N8V6SaFzfMzE8TaM0bHUP_olT0MW
"""

#!pip install -U pymoo

import numpy as np
from pymoo.algorithms.nsga2 import NSGA2
from pymoo.factory import get_problem, get_crossover, get_mutation
from pymoo.optimize import minimize
from pymoo.visualization.scatter import Scatter
from pymoo.factory import get_performance_indicator

problem = get_problem("zdt1")

algorithm = NSGA2(pop_size=100,
                  crossover=get_crossover("real_sbx", prob=0.9),
                  mutation=get_mutation("real_pm", prob=0.5))

res = minimize(problem,
               algorithm,
               ('n_gen', 250),
               verbose=False)


pf = problem.pareto_front()
A = np.loadtxt("ZDT1.pf")

plot = Scatter()
plot.add(pf, plot_type="line", color="black", alpha=0.7)
plot.add(res.F, color="red")
plot.show()

igd = get_performance_indicator("igd", pf)
print("IGD", igd.calc(A))
hv = get_performance_indicator("hv", pf)
print("hv", hv.calc(A))

problem = get_problem("zdt2")

algorithm = NSGA2(pop_size=100,
                  crossover=get_crossover("real_sbx", prob=0.9),
                  mutation=get_mutation("real_pm", prob=0.5))

res = minimize(problem,
               algorithm,
               ('n_gen', 250),
               verbose=False)


pf = problem.pareto_front()
A = np.loadtxt("ZDT2.pf")

plot = Scatter()
plot.add(pf, plot_type="line", color="black", alpha=0.7)
plot.add(res.F, color="red")
plot.show()

igd = get_performance_indicator("igd", pf)
print("IGD", igd.calc(A))
hv = get_performance_indicator("hv", pf)
print("hv", hv.calc(A))

problem = get_problem("zdt3")

algorithm = NSGA2(pop_size=100,
                  crossover=get_crossover("real_sbx", prob=0.9),
                  mutation=get_mutation("real_pm", prob=0.5))

res = minimize(problem,
               algorithm,
               ('n_gen', 250),
               verbose=False)


pf = problem.pareto_front()
A = np.loadtxt("ZDT3.pf")

plot = Scatter()
plot.add(pf, plot_type="line", color="black", alpha=0.7)
plot.add(res.F, color="red")
plot.show()

igd = get_performance_indicator("igd", pf)
print("IGD", igd.calc(A))
hv = get_performance_indicator("hv", pf)
print("hv", hv.calc(A))