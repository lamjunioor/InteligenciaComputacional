# -*- coding: utf-8 -*-
"""EPC07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ib-fPPqXZ9NEOPcKNLpCuyfYSD2cY-lw
"""

#!python -m pip install geneticalgs

import math
from geneticalgs import RealGA
import numpy as np
import matplotlib.pyplot as plt

def sin(x):
  for i in range(len(x)):
    y.append(x[i]*math.sin(10*math.pi*x[i])+1)

def func(x):
  return x*math.sin(10*math.pi*x)+1

x1 = np.arange(-1, 2.01, 0.01)
y1 = [func(elem) for elem in x1]

plt.plot(x1, y1, label='defined function')
plt.xlabel('x[float]')
plt.ylabel('y[float]')
plt.title('Visualization of defined function')

sga = RealGA(func, optim='max', elitism=True, selection='roulette',#setar selection='rank' para steady-state
            mut_prob=0.1, cross_prob=0.9)#setar cross_prob de acordo com os enunciados

sga.init_random_population(100, 1, (-1,2))

x2 = []
y2 = []
for ind in sga.population:
    x2.append(ind.chromosome)
    y2.append(ind.fitness_val)
    
x1 = np.arange(-1, 2.01, 0.01)
y1 = [func(elem) for elem in x1]

plt.plot(x1, y1, label='function')
plt.plot(x2, y2, 'o', label='random samples')
plt.legend(loc='best')
plt.title('Random samples on the specified function')

fitness_progress = sga.run(200)
print(sga.best_solution)

x1 = list(range(len(fitness_progress)))
plt.plot(x1, fitness_progress)